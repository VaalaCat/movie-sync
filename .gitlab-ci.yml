# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy



build-job:       # This job runs in the build stage, which runs first.
  image: node:17
  stage: build
  script:
    - |
      npm  --registry https://registry.npm.taobao.org install
      npm run build
  artifacts:
    paths:
      - dist
    expire_in: 24 hour

deploy-job:      # This job runs in the deploy stage.
  image: python:3.6
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  before_script:
    - |
      which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )
      eval $(ssh-agent -s)
      echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan $SSH_TARGET >> ~/.ssh/known_hosts
      tar czf dist.tar.gz dist
  script:
    - |
      ssh $SSH_USERNAME@$SSH_TARGET "rm -rf $DEPLOY_PATH/*"
      scp dist.tar.gz $SSH_USERNAME@$SSH_TARGET:$DEPLOY_PATH/
      ssh $SSH_USERNAME@$SSH_TARGET "cd $DEPLOY_PATH/ && tar -xf dist.tar.gz && mv dist/* ./ && rm -rf dist*

